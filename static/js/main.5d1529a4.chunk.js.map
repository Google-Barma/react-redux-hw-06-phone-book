{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","base/defaultContacts.js","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/Layout/Layout.jsx","components/Layout/Section.jsx","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","defaultContacts","id","name","phone","deleteContacts","createAction","changeFilter","addContacts","payload","uuid","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","Layout","children","Section","title","connect","dispatch","onAddContacts","useState","setName","setPhone","className","s","form","onSubmit","e","preventDefault","map","includes","isAdded","alert","handleSubmit","htmlFor","type","value","onChange","target","input","disabled","filteredContacts","toLowerCase","onDeleteBtn","nameText","onClick","onChangeFilter","event","text","useEffect","setItem","stringify","ContactForm","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d1529a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameText\":\"ContactList_nameText__8KOpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__20oAI\"};","const defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\n];\n\nexport default defaultContacts;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nexport const deleteContacts = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const addContacts = createAction('contacts/add', (name, phone) => ({\n  payload: {\n    id: uuid(),\n    name,\n    phone,\n  },\n}));\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport defaultContacts from '../base/defaultContacts';\nimport {\n  changeFilter,\n  addContacts,\n  deleteContacts,\n} from '../redux/contacts-actions';\n\nconst contactsReducer = createReducer(\n  JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts,\n  {\n    [addContacts]: (state, { payload }) => [...state, payload],\n    [deleteContacts]: (state, { payload }) =>\n      state.filter(contact => {\n        return contact.id !== payload;\n      }),\n  },\n);\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './contacts-reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","export default function Layout({ children }) {\n  return <div>{children}</div>;\n}\n","import propTypes from 'prop-types';\nexport default function Section({ children, title }) {\n  return (\n    <section>\n      {title ? <h2>{title}</h2> : null}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { addContacts } from '../../redux/contacts-actions';\n\nfunction ContactsForm({ contacts, onAddContacts }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isAdded = name =>\n      contacts.map(contact => contact.name).includes(name);\n\n    if (isAdded(name)) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      onAddContacts(name, phone);\n    }\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={e => handleSubmit(e)}>\n        <label id=\"name\" htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <label id=\"phone\" htmlFor=\"phone\">\n          Phone\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          id=\"phone\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n        />\n        <button type=\"submit\" disabled={!(name && phone)}>\n          add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nContactsForm.propTypes = {\n  onAddContacts: propTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContacts: (name, phone) => dispatch(addContacts(name, phone)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);\n","import { connect } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts-actions';\nimport propTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactsList({ contacts, onDeleteBtn }) {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, phone }) => (\n          <li key={id}>\n            <p className={s.nameText}>\n              {name}: <span>{phone}</span>\n            </p>\n            <button type=\"button\" onClick={e => onDeleteBtn(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  onDeleteBtn: propTypes.func,\n  contacts: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string,\n      name: propTypes.string,\n      phone: propTypes.string,\n    }),\n  ),\n};\n\nconst filteredContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = ({ contacts, filter }) => {\n  return {\n    contacts: filteredContacts(contacts, filter),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteBtn: id => dispatch(deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts-actions';\nimport propTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ filter, onChangeFilter }) {\n  return (\n    <>\n      <label className={s.text} name=\"filter\" htmlFor=\"filter\" value={filter}>\n        Find contacts by name\n      </label>\n      <input value={filter} type=\"text\" id=\"filter\" onChange={onChangeFilter} />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: propTypes.string,\n  onChangeFilter: propTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Layout from './Layout/Layout';\nimport Section from './Layout/Section';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactsList from './ContactsList/ContactsList';\nimport Filter from './Filter/Filter';\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Layout>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      {contacts.length ? (\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      ) : null}\n    </Layout>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}